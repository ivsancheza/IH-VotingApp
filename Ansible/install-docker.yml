---
- hosts: all
  become: true

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Create frontend network
      community.docker.docker_network:
        name: frontend
        driver: bridge
      when: inventory_hostname in ['vote', 'worker']

    - name: Create backend network
      community.docker.docker_network:
        name: backend
        driver: bridge
      when: inventory_hostname in ['db', 'worker', 'result']

    - name: Pull Docker image from Docker Hub
      community.docker.docker_image:
        name: "ivsancheza/example-voting-app-result-app"
        source: pull
      when: inventory_hostname == 'result'

    - name: Run Docker container
      community.docker.docker_container:
        name: "result"
        image: "ivsancheza/example-voting-app-result-app"
        state: started
        ports:
          - "80:80"
        networks:
          - name: backend
      when: inventory_hostname == 'result'

    - name: Pull Docker image from Docker Hub
      community.docker.docker_image:
        name: "ivsancheza/example-voting-app-voting-app"
        source: pull
      when: inventory_hostname == 'vote'

    - name: Run Docker container
      community.docker.docker_container:
        name: "vote"
        image: "ivsancheza/example-voting-app-voting-app"
        state: started
        ports:
          - "80:80"
        networks:
          - name: frontend
      when: inventory_hostname == 'vote'

    - name: Pull Docker image from Docker Hub
      community.docker.docker_image:
        name: "ivsancheza/redis"
        source: pull
      when: inventory_hostname == 'db'

    - name: Run Docker container
      community.docker.docker_container:
        name: "redis"
        image: "ivsancheza/redis"
        state: started
        ports:
          - "6379:6379"
        networks:
          - name: frontend
          - name: backend
      when: inventory_hostname == 'db'
      
    - name: Pull Docker image from Docker Hub
      community.docker.docker_image:
        name: "ivsancheza/postgres"
        source: pull
      when: inventory_hostname == 'db'

    - name: Run Docker container
      community.docker.docker_container:
        name: "db"
        image: "ivsancheza/postgres"
        state: started
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db
        ports:
          - "5432:5432"
        networks:
          - name: backend
      when: inventory_hostname == 'db'
      
    - name: Pull Docker image from Docker Hub
      community.docker.docker_image:
        name: "ivsancheza/example-voting-app-worker-app"
        source: pull
      when: inventory_hostname == 'db'

    - name: Run Docker container
      community.docker.docker_container:
        name: "worker"
        image: "ivsancheza/example-voting-app-worker-app"
        state: started
        networks:
          - name: frontend
          - name: backend
      when: inventory_hostname == 'db'
      
    - name: Add entry for Redis in /etc/hosts on vote VM
      lineinfile:
        path: /etc/hosts
        line: "10.0.2.4 redis"
        state: present
      when: inventory_hostname == 'vote'